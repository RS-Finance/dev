{"version":3,"sources":["components/Forms/Tick.js","components/Forms/Checkbox.js","components/Icons/InActiveHeart.js","components/Icons/ActiveHeart.js","components/AddFavourite/AddFavourite.js","apollo/mutations/mutations.js","components/DomainItem/ExpiryDate.js","components/Typography/Basic.js","components/QueryAccount.js","utils/dates.js"],"names":["activeColourSwitch","props","active","TickContainer","TickContainerDouble","Svg","hover","Tick","className","width","height","xmlns","d","fillRule","DoubleBorderTick","CheckboxContainer","Checkbox","onClick","checked","name","children","testid","type","useState","setHover","htmlFor","onMouseOver","onMouseOut","readOnly","HeartContainer","Heart","stroke","strokeWidth","fill","ActiveHeart","ActiveHeartDefault","InActiveHeart","InActiveHeartDefault","ADD_FAVOURITE","gql","ADD_SUBDOMAIN_FAVOURITE","DELETE_FAVOURITE","DELETE_SUBDOMAIN_FAVOURITE","AddFavouriteContainer","AddFavourite","domain","isFavourite","isSubDomain","useMutation","variables","subDomainFavouriteMutation","favouriteMutation","e","preventDefault","subDomainFavourites","subDomainFavouritesReactive","filter","previousDomain","window","localStorage","setItem","JSON","stringify","deleteSubDomainFavouriteMutation","addSubDomainFavouriteMutation","favourites","favouritesReactive","deleteFavouriteMutation","addFavouriteMutation","ExpiryDateContainer","isExpiredSoon","ExpiryDate","isExpired","gracePeriodEndDate","isUnderPremiumSale","isInGracePeriod","endOfPremiumDate","message","expiryDate","t","useTranslation","now","Date","calculateIsExpiredSoon","parseInt","GRACE_PERIOD","PREMIUM_PERIOD","formatDate","H2","mq","medium","Title","HR","GET_ACCOUNTS","useAccount","accounts","useQuery","data","unixTimeStamp","noTime","date","moment","format","currentTime","getTime","yearInSeconds","calculateDuration","years","parseFloat"],"mappings":"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","file":"static/js/4.32a587bd.chunk.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst activeColourSwitch = props => (props.active ? '#5284FF' : '#B0BECF')\n\nconst TickContainer = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 23px;\n  width: 23px;\n\n  border-radius: 5px;\n  border: 2px solid ${activeColourSwitch};\n`\n\nconst TickContainerDouble = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 20px;\n  width: 20px;\n\n  border-radius: 3px;\n\n  box-shadow: 0 0 0 2px ${activeColourSwitch}, -5px -5px 0 0 white,\n    -5px -5px 0 2px ${activeColourSwitch};\n`\n\nconst Svg = styled('svg')`\n  margin-top: 2px;\n  path {\n    fill: ${activeColourSwitch};\n    opacity: ${props => (props.active || props.hover ? '1' : '0')};\n  }\n`\n\nconst Tick = ({ active, className, hover }) => (\n  <TickContainer className={className} active={active}>\n    <Svg\n      width=\"11\"\n      height=\"8\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      active={active}\n      hover={hover}\n    >\n      <path\n        d=\"M9.63 0L4.537 5.202 1.37 1.967 0 3.367 4.537 8 11 1.399z\"\n        fillRule=\"evenodd\"\n      />\n    </Svg>\n  </TickContainer>\n)\n\nexport default Tick\n\nexport const DoubleBorderTick = ({ active, className, hover }) => (\n  <TickContainerDouble className={className} active={active}>\n    <Svg\n      width=\"11\"\n      height=\"8\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      active={active}\n      hover={hover}\n    >\n      <path\n        d=\"M9.63 0L4.537 5.202 1.37 1.967 0 3.367 4.537 8 11 1.399z\"\n        fillRule=\"evenodd\"\n      />\n    </Svg>\n  </TickContainerDouble>\n)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled/macro'\nimport Tick, { DoubleBorderTick } from './Tick'\n\nconst CheckboxContainer = styled('div')`\n  align-self: center;\n  input {\n    display: none;\n  }\n\n  label {\n    font-size: 22px;\n    font-weight: 200;\n    color: #5f5f5f;\n    text-transform: capitalize;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`\n\nfunction Checkbox({\n  className,\n  onClick,\n  checked,\n  name,\n  children,\n  testid,\n  type = 'normal'\n}) {\n  const [hover, setHover] = useState(false)\n  return (\n    <CheckboxContainer\n      data-testid={testid}\n      className={className}\n      onClick={onClick}\n    >\n      <label\n        htmlFor={name}\n        onMouseOver={() => setHover(true)}\n        onMouseOut={() => setHover(false)}\n      >\n        {type === 'double' ? (\n          <DoubleBorderTick active={checked ? true : false} hover={hover} />\n        ) : (\n          <Tick active={checked ? true : false} hover={hover} />\n        )}\n        <span>{children}</span>\n      </label>\n      <input type=\"checkbox\" name={name} checked={checked} readOnly />\n    </CheckboxContainer>\n  )\n}\n\nexport default Checkbox\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst Heart = ({ active, className }) => (\n  <HeartContainer width=\"25\" height=\"24\" className={className} active={active}>\n    <path\n      d=\"M10.555 2.695C8.47.436 5.123.437 3.038 2.695l-.2.216c-2.45 2.654-2.45 6.991-.001 9.644l9.62 10.42c.03.034.054.034.086 0l9.619-10.42c2.451-2.654 2.45-6.988-.002-9.644l-.2-.216c-2.086-2.26-5.43-2.26-7.517 0l-.817.884a1.525 1.525 0 0 1-2.253 0l-.818-.884z\"\n      stroke=\"#E7E7E7\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    />\n  </HeartContainer>\n)\n\nconst HeartContainer = styled('svg')`\n  vertical-align: middle;\n  path {\n    fill: ${({ active }) => (active ? '#C7D3E3' : 'none')};\n    stroke: ${({ active }) => (active ? '#C7D3E3' : 'E7E7E7')};\n    transition: 0.2s ease-in;\n  }\n\n  &:hover {\n    path {\n      fill: #c7d3e3;\n      stroke: #c7d3e3;\n    }\n  }\n`\n\nexport default Heart\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\n\nconst Heart = ({ active, className }) => (\n  <HeartContainer width=\"25\" height=\"24\" active={active} className={className}>\n    <path\n      d=\"M10.555 2.695C8.47.436 5.123.437 3.038 2.695l-.2.216c-2.45 2.654-2.45 6.991-.001 9.644l9.62 10.42c.03.034.054.034.086 0l9.619-10.42c2.451-2.654 2.45-6.988-.002-9.644l-.2-.216c-2.086-2.26-5.43-2.26-7.517 0l-.817.884a1.525 1.525 0 0 1-2.253 0l-.818-.884z\"\n      stroke=\"#E7E7E7\"\n      strokeWidth=\"2\"\n      fill=\"none\"\n      fillRule=\"evenodd\"\n    />\n  </HeartContainer>\n)\n\nconst HeartContainer = styled('svg')`\n  vertical-align: middle;\n  path {\n    fill: #c7d3e3;\n    stroke: #c7d3e3;\n    transition: 0.2s ease-out;\n  }\n\n  &:hover {\n    path {\n      fill: none;\n      stroke: #e7e7e7;\n    }\n  }\n`\n\nexport default Heart\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nimport {\n  addFavouriteMutation,\n  deleteFavouriteMutation,\n  addSubDomainFavouriteMutation,\n  deleteSubDomainFavouriteMutation\n} from '../../apollo/mutations/mutations'\n\nimport InActiveHeartDefault from '../Icons/InActiveHeart'\nimport ActiveHeartDefault from '../Icons/ActiveHeart'\n\nconst ActiveHeart = styled(ActiveHeartDefault)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst InActiveHeart = styled(InActiveHeartDefault)`\n  &:hover {\n    cursor: pointer;\n  }\n`\n\nconst ADD_FAVOURITE = gql`\n  mutation AddFavouriteMutation($domain: Domain) {\n    addFavourite(domain: $domain) @client\n  }\n`\nconst ADD_SUBDOMAIN_FAVOURITE = gql`\n  mutation AddSubDomainFavourite($domain: Domain) {\n    addSubDomainFavourite(domain: $domain) @client\n  }\n`\n\nconst DELETE_FAVOURITE = gql`\n  mutation DeleteFavouriteMutation($domain: Domain) {\n    deleteFavourite(domain: $domain) @client\n  }\n`\nconst DELETE_SUBDOMAIN_FAVOURITE = gql`\n  mutation DeleteSubDomainFavourite($domain: Domain) {\n    deleteSubDomainFavourite(domain: $domain) @client\n  }\n`\n\nconst AddFavourite = ({ domain, isFavourite, isSubDomain }) => {\n  const [subDomainFavouriteMutation] = useMutation(\n    isFavourite ? DELETE_SUBDOMAIN_FAVOURITE : ADD_SUBDOMAIN_FAVOURITE,\n    {\n      variables: {\n        domain: {\n          name: domain.name\n        }\n      }\n    }\n  )\n\n  const [favouriteMutation] = useMutation(\n    isFavourite ? DELETE_FAVOURITE : ADD_FAVOURITE,\n    {\n      variables: {\n        domain: {\n          name: domain.name\n        }\n      }\n    }\n  )\n\n  if (isSubDomain) {\n    return (\n      <AddFavouriteContainer\n        data-testid=\"add-favorite\"\n        onClick={e => {\n          e.preventDefault()\n          isFavourite\n            ? deleteSubDomainFavouriteMutation(domain)\n            : addSubDomainFavouriteMutation(domain)\n          subDomainFavouriteMutation()\n        }}\n      >\n        {isFavourite ? <ActiveHeart /> : <InActiveHeart />}\n      </AddFavouriteContainer>\n    )\n  }\n\n  return (\n    <AddFavouriteContainer\n      data-testid=\"add-favorite\"\n      onClick={e => {\n        e.preventDefault()\n        isFavourite\n          ? deleteFavouriteMutation(domain)\n          : addFavouriteMutation(domain)\n        favouriteMutation()\n      }}\n    >\n      {isFavourite ? <ActiveHeart /> : <InActiveHeart />}\n    </AddFavouriteContainer>\n  )\n}\n\nconst AddFavouriteContainer = styled('div')`\n  padding: 5px;\n`\n\nexport default AddFavourite\n","import {\n  accountsReactive,\n  networkIdReactive,\n  networkReactive,\n  reverseRecordReactive,\n  isReadOnlyReactive,\n  isRunningAsSafeAppReactive,\n  favouritesReactive,\n  subDomainFavouritesReactive,\n  web3ProviderReactive\n} from '../reactiveVars'\nimport { getAccounts, getNetwork, getNetworkId } from '@devdomains/ui'\nimport { disconnect, connect } from '../../api/web3modal'\nimport { getReverseRecord } from '../sideEffects'\nimport { isRunningAsSafeApp } from 'utils/safeApps'\n\nexport const setWeb3ProviderLocalMutation = async provider => {\n  web3ProviderReactive(provider)\n\n  const accounts = await getAccounts()\n\n  if (provider) {\n    provider.removeAllListeners()\n    setAccountsLocalMutation(accounts)\n  }\n\n  provider?.on('chainChanged', _chainId => {\n    console.log('chain changed: ', _chainId)\n    setNetworkIdLocalMutation(parseInt(_chainId))\n  })\n\n  provider?.on('accountsChanged', async accounts => {\n    console.log('accounts changed')\n  })\n\n  return provider\n}\n\nexport const getNetworkMutation = async () => {\n  return networkReactive(await getNetwork())\n}\n\nexport const setAccountsLocalMutation = accounts => {\n  return accountsReactive(accounts)\n}\n\nexport const getIsReadOnlyMutation = () => {}\n\nexport const setNetworkIdLocalMutation = networkId => {\n  return networkIdReactive(networkId)\n}\n\nexport const getIsRunningAsSafeAppMutation = async () => {\n  return isRunningAsSafeAppReactive(isRunningAsSafeApp())\n}\n\nexport const connectMutation = async address => {\n  let network\n  try {\n    network = await connect()\n  } catch (e) {\n    console.error('connect mutation error: ', e)\n    //setError({ variables: { message: e?.message } })\n  }\n  if (network) {\n    networkIdReactive(await getNetworkId())\n    isReadOnlyReactive(false)\n    reverseRecordReactive(await getReverseRecord(address))\n  }\n}\n\nexport const addFavouriteMutation = domain => {\n  const favourites = [...favouritesReactive(), domain]\n  window.localStorage.setItem('ensFavourites', JSON.stringify(favourites))\n  return favouritesReactive(favourites)\n}\n\nexport const deleteFavouriteMutation = domain => {\n  const previous = favouritesReactive()\n  const favourites = previous.filter(\n    previousDomain => previousDomain.name !== domain.name\n  )\n  window.localStorage.setItem('ensFavourites', JSON.stringify(favourites))\n  return favouritesReactive(favourites)\n}\n\nexport const addSubDomainFavouriteMutation = domain => {\n  const subDomainFavourites = [...subDomainFavouritesReactive(), domain]\n  window.localStorage.setItem(\n    'ensSubDomainFavourites',\n    JSON.stringify(subDomainFavourites)\n  )\n  return subDomainFavouritesReactive(subDomainFavourites)\n}\n\nexport const deleteSubDomainFavouriteMutation = domain => {\n  const subDomainFavourites = subDomainFavouritesReactive().filter(\n    previousDomain => previousDomain.name !== domain.name\n  )\n  window.localStorage.setItem(\n    'ensSubDomainFavourites',\n    JSON.stringify(subDomainFavourites)\n  )\n  return subDomainFavourites\n}\n\nexport const setIsAppReady = isAppReady => {\n  return\n}\n","import React from 'react'\nimport styled from '@emotion/styled/macro'\nimport { useTranslation } from 'react-i18next'\nimport {\n  formatDate,\n  calculateIsExpiredSoon,\n  GRACE_PERIOD,\n  PREMIUM_PERIOD\n} from 'utils/dates'\n\nconst ExpiryDateContainer = styled('p')`\n  font-size: 18px;\n  font-weight: 100;\n  color: ${({ isExpiredSoon }) => (isExpiredSoon ? 'red' : '#adbbcd')};\n`\n\nconst ExpiryDate = ({ expiryDate, domain, name }) => {\n  let isExpiredSoon,\n    isExpired,\n    gracePeriodEndDate,\n    isUnderPremiumSale,\n    isInGracePeriod,\n    endOfPremiumDate,\n    message\n  let { t } = useTranslation()\n  const now = new Date()\n  if (expiryDate) {\n    isExpiredSoon = calculateIsExpiredSoon(expiryDate)\n    isExpired = now > new Date(parseInt(expiryDate * 1000))\n    gracePeriodEndDate = new Date((parseInt(expiryDate) + GRACE_PERIOD) * 1000)\n    endOfPremiumDate = new Date(\n      (parseInt(expiryDate) + GRACE_PERIOD + PREMIUM_PERIOD) * 1000\n    )\n    if (isExpired) {\n      isInGracePeriod = now < gracePeriodEndDate\n      isUnderPremiumSale = !isInGracePeriod && now < endOfPremiumDate\n      if (isInGracePeriod) {\n        message = `${t('singleName.expiry.gracePeriodEnds')} ${formatDate(\n          gracePeriodEndDate\n        )}`\n      } else if (isUnderPremiumSale) {\n        message = t('singleName.expiry.isUnderPremiumSale')\n      } else {\n        // sale under normal price\n      }\n    } else {\n      // not expired\n      message = `${t('c.expires')} ${formatDate(parseInt(expiryDate * 1000))}`\n    }\n  } else {\n    return <span>&nbsp;</span>\n  }\n  return (\n    <ExpiryDateContainer\n      data-testid={`expiry-date-${name}`}\n      isExpiredSoon={isExpiredSoon}\n    >\n      {message}\n    </ExpiryDateContainer>\n  )\n}\n\nexport default ExpiryDate\n","import styled from '@emotion/styled/macro'\nimport mq from 'mediaQuery'\n\nexport const H2 = styled('h2')`\n  font-size: 18px;\n  font-weight: 200;\n  color: #adbbcd;\n\n  ${mq.medium`\n    font-size: 22px;\n  `}\n`\n\nexport const Title = styled('h2')`\n  font-size: 18px;\n  font-weight: 100;\n  padding: 0;\n  margin: 0;\n  ${mq.medium`\n    font-size: 28px;\n  `}\n`\n\nexport const HR = styled('hr')`\n  border: 0;\n  border-top: 1px dashed #d3d3d3;\n  background-color: #fff;\n  margin-bottom: 30px;\n  margin-top: 0;\n`\n","import { useQuery } from '@apollo/client'\nimport gql from 'graphql-tag'\n\nconst GET_ACCOUNTS = gql`\n  query getAccounts @client {\n    accounts\n  }\n`\n\nexport function useAccount() {\n  const {\n    data: { accounts }\n  } = useQuery(GET_ACCOUNTS)\n  if (!accounts) {\n    return '0x0000000000000000000000000000000000000000'\n  }\n  return accounts[0]\n}\n","import moment from 'moment'\n\nexport const GRACE_PERIOD = 86400 * 90\nexport const PREMIUM_PERIOD = 86400 * 28\n\nexport function formatDate(unixTimeStamp, noTime) {\n  let date = moment(unixTimeStamp).format('YYYY.MM.DD')\n  if (!noTime) {\n    date = date + ' at ' + moment(unixTimeStamp).format('HH:mm (UTCZ)')\n  }\n  return date\n}\n\nexport function humanizeDate(timeLeft) {\n  if (timeLeft < 3600000) {\n    const minutes = Math.floor(moment.duration(timeLeft).asMinutes())\n    const seconds = Math.floor(moment.duration(timeLeft).seconds())\n    return `${minutes} m ${seconds}s`\n  } else {\n    return `${Math.floor(\n      moment\n        .duration(timeLeft)\n        .asHours()\n        .toFixed(0)\n    )}h ${moment\n      .duration(timeLeft)\n      .minutes()\n      .toFixed(0)}m`\n  }\n}\n\nexport function calculateIsExpiredSoon(expiryDate) {\n  if (!expiryDate) return expiryDate\n\n  const ADVANCE_WARNING_DAYS = 30\n\n  const currentTime = new Date().getTime()\n  const expiryTime = new Date(expiryDate * 1000).getTime()\n  const differenceInTime = expiryTime - currentTime\n  const differenceInDays = differenceInTime / (1000 * 3600 * 24)\n\n  return differenceInDays < ADVANCE_WARNING_DAYS\n}\n\nexport const yearInSeconds = 31556952\n\nexport function calculateDuration(years) {\n  return parseInt(parseFloat(years) * yearInSeconds)\n}\n"],"sourceRoot":""}